default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean bundleRelease")
    upload_to_play_store(
      track: 'production',
      aab: './app/build/outputs/bundle/release/app-release.aab'
    )
  end

  lane :bump_version do
    path = '../app/build.gradle.kts'

    # Read the file
    s = File.read(path)

    # Bump version code
    version_code_re = /versionCode\s*=\s*(\d+)/
    version_code = s[version_code_re, 1].to_i
    new_version_code = version_code + 1
    s[version_code_re, 1] = new_version_code.to_s

    # Bump version name (patch version)
    version_name_re = /versionName\s*=\s*"(\d+)\.(\d+)\.(\d+)"/
    new_version_name = nil
    if match = s.match(version_name_re)
      major = match[1].to_i
      minor = match[2].to_i
      patch = match[3].to_i
      new_version_name = "#{major}.#{minor}.#{patch + 1}"
      s[version_name_re] = "versionName = \"#{new_version_name}\""
    end

    # Write back to file
    File.write(path, s)

    UI.success("ðŸŽ‰ Version bumped to #{new_version_name} (#{new_version_code})")
    
    # Return the new version info
    {
      version_name: new_version_name,
      version_code: new_version_code
    }
  end

  desc "Deploy to internal testing track"
  lane :internal do
    # Ensure working directory is clean
    ensure_git_status_clean

    # Bump version and capture the new version
    version_info = bump_version
    version_name = version_info[:version_name]
    version_code = version_info[:version_code]
    
    # Build the release bundle
    gradle(task: "clean bundleRelease")
    
    # Commit the version bump
    git_add(path: "app/build.gradle.kts")
    git_commit(
      path: "app/build.gradle.kts",
      message: "Bump version to #{version_name} (#{version_code})"
    )
    
    # Create a tag for this release
    add_git_tag(
      tag: "v#{version_name}",
      message: "Release version #{version_name}"
    )
    
    # Push the commit and tag
    push_to_git_remote(
      tags: true
    )
    
    # Upload to Play Store
    upload_to_play_store(
      track: 'internal',
      aab: './app/build/outputs/bundle/release/app-release.aab',
      release_status: 'draft'
    )
    
    UI.success("ðŸš€ Successfully released version #{version_name} to internal track!")
  end

  desc "Deploy to alpha testing track"
  lane :alpha do
    gradle(task: "clean bundleRelease")
    upload_to_play_store(
      track: 'alpha',
      aab: './app/build/outputs/bundle/release/app-release.aab'
    )
  end

  desc "Deploy to beta testing track"
  lane :beta_play do
    gradle(task: "clean bundleRelease")
    upload_to_play_store(
      track: 'beta',
      aab: './app/build/outputs/bundle/release/app-release.aab'
    )
  end
end
